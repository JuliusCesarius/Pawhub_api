using blastic.pawhub.models.Core;
using blastic.pawhub.models.Enums;
using blastic.pawhub.service.core;
using Pawhub_API.Models.Filters;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace blastic.pawhub.api.Controllers
{
    public class PushDevicesController : ApiController
    {
        /// <summary>
        /// Allows to register the devices for the push service
        /// </summary>
        /// <param name="id">Device Id from generated by the Os</param>
        /// <param name="os">The possible values for os are: android, ios, windowsPhone,blackberry and other</param>
        /// <returns>Success status</returns>
        [HttpPost]
        [NotImplementedExceptionFilter]
        [Route("pushDevices/{id}/{os}")]
        public IHttpActionResult Post(string id, string os)
        {
            using (var pushDevicesService = new PushDevicesService())
            {
                var pushDevice = pushDevicesService.GetByDeviceId(id);
                if (pushDevice != null)
                {
                    throw new Exception("Device already exits");
                }
                DeviceOs deviceOs;
                if (!Enum.TryParse<DeviceOs>(os, out deviceOs)) throw new HttpResponseException(HttpStatusCode.InternalServerError);

                pushDevice = new PushDevice
                {
                    deviceId = id,
                    os = deviceOs.ToString()
                };
                pushDevicesService.Save(pushDevice);
            }
            return Ok(true);
        }
    }
}
